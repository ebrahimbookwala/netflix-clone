{"version":3,"sources":["components/Header.module.css","components/SearchBar.js","components/Header.js","components/movie/MovieDisplayImage.js","components/containers/MovieContainer.js","components/Spinner.js","components/movie/MovieList.js","components/movie/MovieButton.js","features/listData/ListSlice.js","components/movie/ButtonContainer.js","components/movie/MovieGenre.js","components/movie/MovieHeaders.js","components/movie/MovieImage.js","components/movie/MovieDescriptionModal.js","components/movie/Movie.js","components/movie/Modal.js","features/moviesData/MovieGenreSlice.js","components/movie/MovieMainBody.js","features/tvData/TvGenreSlice.js","components/tv/TvMainBody.js","components/list/ListMovieDisplay.js","components/list/ListSelection.js","components/list/MyListMainBody.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBar","Header","className","styles","header","to","src","alt","MovieDisplayImage","movie","turnModalOn","cn","onClick","e","backdrop_path","title","name","MovieContainer","children","style","Spinner","classname","MovieList","genre","isMovie","useState","showRight","showLeft","moveToEnd","moveSlideShow","setMoveSlideShow","loading","setLoading","movieList","setMovieList","fetchMovies","useCallback","a","fetch","API_KEY","id","data","json","response","results","console","log","message","useEffect","transform","map","prev","length","MovieButton","icon","color","setColor","Icon","listSlice","createSlice","initialState","reducers","addToList","state","action","findIndex","payload","push","removeFromLis","filter","listing","actions","removeFromList","ButtonContainer","showDescription","dispatch","useDispatch","PlayArrowIcon","AddIcon","ThumbUpOffAltOutlinedIcon","ThumbDownOffAltOutlinedIcon","ArrowDropDownIcon","MovieGenre","genreNames","MovieHeaders","release_date","popularity","original_language","adult","timeAgo","formatDistanceToNow","Date","addSuffix","MovieImage","image","MovieDescriptionModal","hideDescription","ref","useRef","target","current","overview","first_air_date","toFixed","Movie","movieModalVisible","setMovieModalVisible","genreList","useSelector","genres","tvGenres","genre_ids","indexOf","splice","Modal","turnModalOff","fetchGenres","createAsyncThunk","movieGenre","status","extraReducers","pending","fulfilled","rejected","MovieMainBody","movieClicked","setMovieClicked","setMovie","genreData","TvMainBody","tvClicked","setTvClicked","tv","setTv","genreTvData","ListMovieDisplay","ListSelection","modalOn","setModalOn","showModal","MyListMainBody","listMovies","list","App","path","element","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","counterSlice","value","increment","decrement","incrementByAmount","builder","addCase","store","configureStore","reducer","counter","counterReducer","movieGenreReducer","tvGenreReducer","listReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5e855bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1FBRu\",\"primary-nav\":\"Header_primary-nav__2K9-o\",\"secondary-nav\":\"Header_secondary-nav__vkfyZ\",\"logo-container\":\"Header_logo-container__27YtK\",\"logo-image\":\"Header_logo-image__3olbc\"};","import React from \"react\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst SearchBar = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<SearchIcon />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport FaceIcon from \"@mui/icons-material/Face\";\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<header className={styles.header}>\r\n\t\t\t<div className={styles[\"logo-container\"]}>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc=\"images/logo.jpg\"\r\n\t\t\t\t\t\tclassName={styles[\"logo-image\"]}\r\n\t\t\t\t\t\talt=\"company logo\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<nav className={styles[\"primary-nav\"]}>\r\n\t\t\t\t<Link to=\"/\"> Home</Link>\r\n\t\t\t\t<Link to=\"/tv\"> TV Shows</Link>\r\n\t\t\t\t<Link to=\"/\"> Movies</Link>\r\n\t\t\t\t<Link to=\"/\"> News & Popular</Link>\r\n\t\t\t\t<Link to=\"/my-list\"> My List</Link>\r\n\t\t\t</nav>\r\n\t\t\t<nav className={styles[\"secondary-nav\"]}>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<SearchBar />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<NotificationsIcon />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to=\"/\">\r\n\t\t\t\t\t<FaceIcon />\r\n\t\t\t\t\t<ArrowDropDownIcon />\r\n\t\t\t\t</Link>\r\n\t\t\t</nav>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport cn from \"classnames\";\r\n\r\nfunction MovieDisplayImage({ movie, turnModalOn }) {\r\n\tconst showMovieDetails = (e) => {\r\n\t\tturnModalOn(movie);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={cn(\"movie-display-container\")} onClick={showMovieDetails}>\r\n\t\t\t<img\r\n\t\t\t\tsrc={`https://image.tmdb.org/t/p/w200/${movie.backdrop_path}`}\r\n\t\t\t\talt={movie.title || movie.name}\r\n\t\t\t/>\r\n\t\t\t<h3 className=\"movie-title\">{movie.title || movie.name}</h3>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MovieDisplayImage;\r\n","import React from \"react\";\r\n\r\nfunction MovieContainer({ children, style }) {\r\n\treturn (\r\n\t\t<section className=\"movie-container\" style={style}>\r\n\t\t\t{children}\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nexport default MovieContainer;\r\n","import React from \"react\";\r\n\r\nfunction Spinner({ classname }) {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={`spinner ${classname}`}></div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport MovieDisplayImage from \"./MovieDisplayImage\";\r\nimport MovieContainer from \"../containers/MovieContainer\";\r\nimport ArrowForwardIosOutlinedIcon from \"@mui/icons-material/ArrowForwardIosOutlined\";\r\nimport ArrowBackIosNewOutlinedIcon from \"@mui/icons-material/ArrowBackIosNewOutlined\";\r\nimport { API_KEY } from \"../../App\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nfunction MovieList({ genre, turnModalOn, isMovie }) {\r\n\tconst [moveSlideShow, setMoveSlideShow] = useState({\r\n\t\tshowRight: true,\r\n\t\tshowLeft: false,\r\n\t\tmoveToEnd: 0,\r\n\t});\r\n\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [movieList, setMovieList] = useState([]);\r\n\r\n\tconst fetchMovies = useCallback(async () => {\r\n\t\ttry {\r\n\t\t\tsetLoading(true);\r\n\t\t\tconst data = await fetch(\r\n\t\t\t\t`https://api.themoviedb.org/3/discover/${\r\n\t\t\t\t\tisMovie ? \"movie\" : \"tv\"\r\n\t\t\t\t}?api_key=${API_KEY}&sort_by=popularity.desc&include_adult=true&include_video=false&page=1&with_genres=${\r\n\t\t\t\t\tgenre.id\r\n\t\t\t\t}&with_watch_monetization_types=flatrate`\r\n\t\t\t);\r\n\r\n\t\t\tconst response = await data.json();\r\n\r\n\t\t\tsetMovieList(response.results);\r\n\t\t\tsetLoading(false);\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(\"Error\" + e.message);\r\n\t\t}\r\n\t}, [genre.id, isMovie]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchMovies();\r\n\t}, [fetchMovies]);\r\n\r\n\tconst moveImagesToEnd = () => {\r\n\t\tsetMoveSlideShow((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tshowLeft: true,\r\n\t\t\tmoveToEnd: prev.moveToEnd - 500,\r\n\t\t}));\r\n\r\n\t\tsetMoveSlideShow((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tshowRight:\r\n\t\t\t\tprev.moveToEnd <= -(200 * (movieList.length - 8)) ? false : true,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst moveImagesToStart = () => {\r\n\t\tsetMoveSlideShow((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tshowRight: true,\r\n\t\t\tmoveToEnd: prev.moveToEnd + 500,\r\n\t\t}));\r\n\r\n\t\tsetMoveSlideShow((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tshowLeft: prev.moveToEnd === 0 ? false : true,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst styles = {\r\n\t\ttransform: `translateX(${moveSlideShow.moveToEnd}px)`,\r\n\t};\r\n\r\n\treturn loading ? (\r\n\t\t<Spinner classname=\"small\" />\r\n\t) : (\r\n\t\t<div className=\"movie-genre-container\">\r\n\t\t\t<h3 className=\"movie-genre-header\">{genre.name}</h3>\r\n\t\t\t<MovieContainer style={styles}>\r\n\t\t\t\t{movieList.map((movie) => (\r\n\t\t\t\t\t<MovieDisplayImage\r\n\t\t\t\t\t\tmovie={movie}\r\n\t\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\t\tturnModalOn={turnModalOn}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</MovieContainer>\r\n\t\t\t{moveSlideShow.showLeft && (\r\n\t\t\t\t<ArrowBackIosNewOutlinedIcon\r\n\t\t\t\t\tclassName=\"arrow-left\"\r\n\t\t\t\t\tonClick={moveImagesToStart}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{moveSlideShow.showRight && (\r\n\t\t\t\t<ArrowForwardIosOutlinedIcon\r\n\t\t\t\t\tclassName=\"arrow-right\"\r\n\t\t\t\t\tonClick={moveImagesToEnd}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MovieList;\r\n","import { useState } from \"react\";\r\n\r\nfunction MovieButton({ icon, onClick = () => {} }) {\r\n\tconst [color, setColor] = useState(\"\");\r\n\r\n\tconst Icon = icon;\r\n\r\n\tconst onClickAction = () => {\r\n\t\tonClick();\r\n\t\tif (color === \"\") {\r\n\t\t\tsetColor(\"success\");\r\n\t\t} else {\r\n\t\t\tsetColor(\"\");\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<button className=\"rounded-button\">\r\n\t\t\t<Icon onClick={onClickAction} color={color} />\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport default MovieButton;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nconst listSlice = createSlice({\r\n\tname: \"list\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\taddToList(state, action) {\r\n\t\t\tif (state.findIndex((movie) => movie.id === action.payload.id) === -1) {\r\n\t\t\t\tstate.push(action.payload);\r\n\t\t\t}\r\n\t\t},\r\n\t\tremoveFromLis(state, action) {\r\n\t\t\tstate.filter((listing) => listing.id !== action.payload);\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport default listSlice.reducer;\r\nexport const { addToList, removeFromList } = listSlice.actions;\r\n","import React from \"react\";\r\nimport MovieButton from \"./MovieButton\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport ThumbUpOffAltOutlinedIcon from \"@mui/icons-material/ThumbUpOffAltOutlined\";\r\nimport ThumbDownOffAltOutlinedIcon from \"@mui/icons-material/ThumbDownOffAltOutlined\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport { addToList } from \"../../features/listData/ListSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction ButtonContainer({ showDescription, movie }) {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst addToMyList = () => {\r\n\t\tdispatch(addToList(movie));\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"button-container\">\r\n\t\t\t<MovieButton icon={PlayArrowIcon} />\r\n\t\t\t<MovieButton icon={AddIcon} onClick={addToMyList} />\r\n\t\t\t<MovieButton icon={ThumbUpOffAltOutlinedIcon} />\r\n\t\t\t<MovieButton icon={ThumbDownOffAltOutlinedIcon} />\r\n\t\t\t<MovieButton icon={ArrowDropDownIcon} onClick={showDescription} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ButtonContainer;\r\n","import React from \"react\";\r\n\r\nfunction MovieGenre({ genreNames }) {\r\n\t// console.log(genre_ids);\r\n\r\n\treturn (\r\n\t\t<ul className=\"movie-genre\">\r\n\t\t\t{genreNames.map((genre) => (\r\n\t\t\t\t<li key={genre.id}>{genre.name}</li>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n}\r\n\r\nexport default MovieGenre;\r\n","import React from \"react\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\nfunction MovieHeaders({ release_date, popularity, original_language, adult }) {\r\n\tconst timeAgo = formatDistanceToNow(new Date(release_date), {\r\n\t\taddSuffix: true,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"movie-header\">\r\n\t\t\t<p className=\"popularity\">{popularity}</p>\r\n\t\t\t<p className=\"age\">{adult ? \"18+\" : \"14+\"}</p>\r\n\t\t\t<p className=\"duration\">{timeAgo}</p>\r\n\t\t\t<p className=\"hd\">\r\n\t\t\t\t<sub>{original_language}</sub>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MovieHeaders;\r\n","import React from \"react\";\r\n\r\nfunction MovieImage({ image, alt }) {\r\n\treturn (\r\n\t\t<div className=\"movie-image-container\">\r\n\t\t\t<img src={`https://image.tmdb.org/t/p/w300/${image}`} alt={alt} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MovieImage;\r\n","import { useRef } from \"react\";\r\nimport MovieGenre from \"./MovieGenre\";\r\nimport ButtonContainer from \"./ButtonContainer\";\r\nimport MovieHeaders from \"./MovieHeaders\";\r\n\r\nfunction MovieDescriptionModal({ genreNames, movie, hideDescription }) {\r\n\tconst ref = useRef(null);\r\n\r\n\tconst closeDescription = (e) => {\r\n\t\tif (e.target === ref.current) {\r\n\t\t\thideDescription();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"movie-description-modal\"\r\n\t\t\tref={ref}\r\n\t\t\tonClick={closeDescription}\r\n\t\t>\r\n\t\t\t<div className=\"modal-container\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`}\r\n\t\t\t\t\talt={movie.title || movie.name}\r\n\t\t\t\t/>\r\n\t\t\t\t<ButtonContainer movie={movie} />\r\n\t\t\t\t<h3 className=\"modal-movie-title\">{movie.title || movie.name}</h3>\r\n\t\t\t\t<p className=\"movie-description\">{movie.overview}</p>\r\n\r\n\t\t\t\t<MovieHeaders\r\n\t\t\t\t\trelease_date={movie.release_date || movie.first_air_date}\r\n\t\t\t\t\tpopularity={(movie.popularity / 1000).toFixed(2)}\r\n\t\t\t\t\toriginal_language={movie.original_language}\r\n\t\t\t\t\tadult={movie.adult}\r\n\t\t\t\t/>\r\n\t\t\t\t<MovieGenre genreNames={genreNames} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MovieDescriptionModal;\r\n","import ButtonContainer from \"./ButtonContainer\";\r\nimport MovieGenre from \"./MovieGenre\";\r\nimport MovieHeaders from \"./MovieHeaders\";\r\nimport MovieImage from \"./MovieImage\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport MovieDescriptionModal from \"./MovieDescriptionModal\";\r\n\r\nfunction Movie({ movie, isMovie }) {\r\n\tconsole.log(movie);\r\n\r\n\tconst [movieModalVisible, setMovieModalVisible] = useState(false);\r\n\r\n\tconst genreList = useSelector((state) =>\r\n\t\tisMovie ? state.genres.genres : state.tvGenres.genres\r\n\t);\r\n\r\n\tconst genre_ids = movie.genre_ids;\r\n\r\n\tconst genreNames = genreList.filter(\r\n\t\t(genre) => genre_ids.indexOf(genre.id) !== -1\r\n\t);\r\n\tgenreNames.splice(3);\r\n\r\n\tconst showDescription = () => {\r\n\t\tsetMovieModalVisible(true);\r\n\t};\r\n\r\n\tconst hideDescription = () => {\r\n\t\tsetMovieModalVisible(false);\r\n\t};\r\n\r\n\treturn movieModalVisible ? (\r\n\t\t<MovieDescriptionModal\r\n\t\t\tgenreNames={genreNames}\r\n\t\t\tmovie={movie}\r\n\t\t\thideDescription={hideDescription}\r\n\t\t/>\r\n\t) : (\r\n\t\t<div className=\"card\">\r\n\t\t\t<MovieImage image={movie.backdrop_path} alt={movie.title || movie.name} />\r\n\t\t\t<h2 className=\"movie-title-modal\">{movie.title || movie.name}</h2>\r\n\t\t\t<ButtonContainer showDescription={showDescription} movie={movie} />\r\n\t\t\t<MovieHeaders\r\n\t\t\t\trelease_date={movie.release_date || movie.first_air_date}\r\n\t\t\t\tpopularity={(movie.popularity / 1000).toFixed(2)}\r\n\t\t\t\toriginal_language={movie.original_language}\r\n\t\t\t\tadult={movie.adult || false}\r\n\t\t\t/>\r\n\t\t\t<MovieGenre genreNames={genreNames} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Movie;\r\n","import React, { useRef } from \"react\";\r\nimport Movie from \"./Movie\";\r\n\r\nfunction Modal({ movie, turnModalOff, isMovie }) {\r\n\tconst ref = useRef(null);\r\n\r\n\tfunction closeModal(e) {\r\n\t\tif (e.target === ref.current) {\r\n\t\t\tturnModalOff();\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"modal\" onClick={closeModal} ref={ref}>\r\n\t\t\t<Movie movie={movie} isMovie={isMovie} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Modal;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { API_KEY } from \"../../App\";\r\n\r\nconst initialGenres = {\r\n\tstatus: \"\",\r\n\tgenres: [],\r\n};\r\n\r\nexport const fetchGenres = createAsyncThunk(\r\n\t\"movieGenre/fetchGenres\",\r\n\tasync () => {\r\n\t\ttry {\r\n\t\t\tconst data = await fetch(\r\n\t\t\t\t`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`\r\n\t\t\t);\r\n\t\t\tconst response = await data.json();\r\n\t\t\treturn response;\r\n\t\t} catch (e) {\r\n\t\t\treturn e;\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const movieGenre = createSlice({\r\n\tname: \"movieGenre\",\r\n\tinitialState: initialGenres,\r\n\treducers: {},\r\n\textraReducers: {\r\n\t\t[fetchGenres.pending]: (state) => {\r\n\t\t\tstate.status = \"loading\";\r\n\t\t},\r\n\t\t[fetchGenres.fulfilled]: (state, action) => {\r\n\t\t\tstate.genres = action.payload.genres;\r\n\t\t\tstate.status = \"success\";\r\n\t\t},\r\n\t\t[fetchGenres.rejected]: (state, action) => {\r\n\t\t\tstate.genres = action.payload;\r\n\t\t\tstate.status = \"failed\";\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport default movieGenre.reducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MovieList from \"./MovieList\";\r\nimport Spinner from \"../Spinner\";\r\nimport Modal from \"./Modal\";\r\nimport { fetchGenres } from \"../../features/moviesData/MovieGenreSlice\";\r\n\r\nfunction MovieMainBody() {\r\n\tconst [movieClicked, setMovieClicked] = useState(false);\r\n\tconst [movie, setMovie] = useState({});\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst genreData = useSelector((state) => state.genres);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchGenres());\r\n\t}, [dispatch]);\r\n\r\n\tfunction turnModalOn(movieClicked) {\r\n\t\tsetMovieClicked(true);\r\n\t\tsetMovie(movieClicked);\r\n\t}\r\n\r\n\tfunction turnModalOff() {\r\n\t\tsetMovieClicked(false);\r\n\t}\r\n\r\n\treturn genreData.status === \"loading\" ? (\r\n\t\t<Spinner />\r\n\t) : (\r\n\t\t<div>\r\n\t\t\t{genreData.genres.map((genre) => (\r\n\t\t\t\t<MovieList\r\n\t\t\t\t\tgenre={genre}\r\n\t\t\t\t\tkey={genre.id}\r\n\t\t\t\t\tturnModalOn={turnModalOn}\r\n\t\t\t\t\tisMovie={true}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t\t{movieClicked && (\r\n\t\t\t\t<Modal movie={movie} turnModalOff={turnModalOff} isMovie={true} />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default MovieMainBody;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { API_KEY } from \"../../App\";\r\n\r\nconst initialGenres = {\r\n\tstatus: \"\",\r\n\tgenres: [],\r\n};\r\n\r\nexport const fetchGenres = createAsyncThunk(\"tvGenre/fetchGenres\", async () => {\r\n\ttry {\r\n\t\tconst data = await fetch(\r\n\t\t\t`https://api.themoviedb.org/3/genre/tv/list?api_key=${API_KEY}&language=en-US`\r\n\t\t);\r\n\t\tconst response = await data.json();\r\n\t\treturn response;\r\n\t} catch (e) {\r\n\t\treturn e;\r\n\t}\r\n});\r\n\r\nexport const movieGenre = createSlice({\r\n\tname: \"tvGenre\",\r\n\tinitialState: initialGenres,\r\n\treducers: {},\r\n\textraReducers: {\r\n\t\t[fetchGenres.pending]: (state) => {\r\n\t\t\tstate.status = \"loading\";\r\n\t\t},\r\n\t\t[fetchGenres.fulfilled]: (state, action) => {\r\n\t\t\tstate.genres = action.payload.genres;\r\n\t\t\tstate.status = \"success\";\r\n\t\t},\r\n\t\t[fetchGenres.rejected]: (state, action) => {\r\n\t\t\tstate.genres = action.payload;\r\n\t\t\tstate.status = \"failed\";\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport default movieGenre.reducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MovieList from \"../movie/MovieList\";\r\nimport Spinner from \"../Spinner\";\r\nimport Modal from \"../movie/Modal\";\r\nimport { fetchGenres } from \"../../features/tvData/TvGenreSlice\";\r\n\r\nfunction TvMainBody() {\r\n\tconst [tvClicked, setTvClicked] = useState(false);\r\n\tconst [tv, setTv] = useState({});\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst genreTvData = useSelector((state) => state.tvGenres);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(fetchGenres());\r\n\t}, [dispatch]);\r\n\r\n\tfunction turnModalOn(tvClicked) {\r\n\t\tconsole.log(\"Hello\");\r\n\t\tsetTvClicked(true);\r\n\t\tsetTv(tvClicked);\r\n\t}\r\n\r\n\tfunction turnModalOff() {\r\n\t\tsetTvClicked(false);\r\n\t}\r\n\r\n\tconsole.log(genreTvData.genres);\r\n\r\n\treturn genreTvData.status === \"loading\" ? (\r\n\t\t<Spinner />\r\n\t) : (\r\n\t\t<div>\r\n\t\t\t{genreTvData.genres.map((genre) => (\r\n\t\t\t\t<MovieList\r\n\t\t\t\t\tgenre={genre}\r\n\t\t\t\t\tkey={genre.id}\r\n\t\t\t\t\tturnModalOn={turnModalOn}\r\n\t\t\t\t\tisMovie={false}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t\t{tvClicked && (\r\n\t\t\t\t<Modal movie={tv} turnModalOff={turnModalOff} isMovie={false} />\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TvMainBody;\r\n","import { useRef } from \"react\";\r\nimport MovieGenre from \"../movie/MovieGenre\";\r\nimport ButtonContainer from \"../movie/ButtonContainer\";\r\nimport MovieHeaders from \"../movie/MovieHeaders\";\r\n\r\nfunction ListMovieDisplay({ genreNames, movie, hideDescription }) {\r\n\tconst ref = useRef(null);\r\n\r\n\tconst closeDescription = (e) => {\r\n\t\tif (e.target === ref.current) {\r\n\t\t\thideDescription();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"movie-description-modal\"\r\n\t\t\tref={ref}\r\n\t\t\tonClick={closeDescription}\r\n\t\t>\r\n\t\t\t<div className=\"modal-container\">\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`}\r\n\t\t\t\t\talt={movie.title || movie.name}\r\n\t\t\t\t/>\r\n\t\t\t\t<ButtonContainer movie={movie} />\r\n\t\t\t\t<h3 className=\"modal-movie-title\">{movie.title || movie.name}</h3>\r\n\t\t\t\t<p className=\"movie-description\">{movie.overview}</p>\r\n\r\n\t\t\t\t<MovieHeaders\r\n\t\t\t\t\trelease_date={movie.release_date || movie.first_air_date}\r\n\t\t\t\t\tpopularity={(movie.popularity / 1000).toFixed(2)}\r\n\t\t\t\t\toriginal_language={movie.original_language}\r\n\t\t\t\t\tadult={movie.adult}\r\n\t\t\t\t/>\r\n\t\t\t\t<MovieGenre genreNames={genreNames} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ListMovieDisplay;\r\n","import { useState } from \"react\";\r\nimport cn from \"classnames\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ListMovieDisplay from \"./ListMovieDisplay\";\r\n\r\nfunction ListSelection({ movie, isMovie }) {\r\n\tconst [modalOn, setModalOn] = useState(false);\r\n\r\n\tconst showModal = () => {\r\n\t\tsetModalOn((prev) => !prev);\r\n\t};\r\n\r\n\tconst genres = useSelector((state) =>\r\n\t\tisMovie ? state.genres.genres : state.tvGenres.genres\r\n\t);\r\n\r\n\tconst genre_ids = movie.genre_ids;\r\n\r\n\tconst genreNames = genres.filter(\r\n\t\t(genre) => genre_ids.indexOf(genre.id) !== -1\r\n\t);\r\n\tgenreNames.splice(3);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={cn(\"movie-display-container\")} onClick={showModal}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w200/${movie.backdrop_path}`}\r\n\t\t\t\t\talt={movie.title || movie.name}\r\n\t\t\t\t/>\r\n\t\t\t\t<h3 className=\"movie-title\">{movie.title || movie.name}</h3>\r\n\t\t\t</div>\r\n\r\n\t\t\t{modalOn && (\r\n\t\t\t\t<ListMovieDisplay\r\n\t\t\t\t\tgenreNames={genreNames}\r\n\t\t\t\t\tmovie={movie}\r\n\t\t\t\t\thideDescription={showModal}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ListSelection;\r\n","import { useSelector } from \"react-redux\";\r\nimport ListSelection from \"./ListSelection\";\r\n\r\nfunction MyListMainBody() {\r\n\tconst listMovies = useSelector((state) => state.list);\r\n\r\n\treturn listMovies.length > 0 ? (\r\n\t\t<div className=\"list-item\">\r\n\t\t\t{listMovies.map((movie) => (\r\n\t\t\t\t<ListSelection\r\n\t\t\t\t\tkey={movie.id}\r\n\t\t\t\t\tmovie={movie}\r\n\t\t\t\t\tisMovie={movie.first_air_date ? false : true}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t) : (\r\n\t\t<div className=\"no-item\">No show favorited</div>\r\n\t);\r\n}\r\n\r\nexport default MyListMainBody;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Header from \"./components/Header\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport MovieMainBody from \"./components/movie/MovieMainBody\";\nimport TvMainBody from \"./components/tv/TvMainBody\";\nimport MyListMainBody from \"./components/list/MyListMainBody\";\n\nexport const API_KEY = \"1908ad6d31ade6e491f7bfadf4e64934\";\n\nfunction App() {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<Routes>\n\t\t\t\t<Route path=\"/\" element={<MovieMainBody />}></Route>\n\t\t\t\t<Route path=\"/tv\" element={<TvMainBody />}></Route>\n\t\t\t\t<Route path=\"/my-list\" element={<MyListMainBody />}></Route>\n\t\t\t</Routes>\n\t\t</>\n\t);\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport movieGenreReducer from \"../features/moviesData/MovieGenreSlice\";\nimport tvGenreReducer from \"../features/tvData/TvGenreSlice\";\nimport listReducer from \"../features/listData/ListSlice\";\n\nexport const store = configureStore({\n\treducer: {\n\t\tcounter: counterReducer,\n\t\tgenres: movieGenreReducer,\n\t\ttvGenres: tvGenreReducer,\n\t\tlist: listReducer,\n\t},\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<Router>\n\t\t\t\t<App />\n\t\t\t</Router>\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}